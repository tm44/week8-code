{"version":3,"sources":["FollowersList.js","GithubUserSearch.js","GithubUser.js","App.js","reportWebVitals.js","index.js"],"names":["FollowersList","state","isLoading","followers","error","followersUrl","this","props","fetch","then","response","json","data","setState","catch","message","className","map","follower","idx","login","src","avatar_url","alt","Component","GithubUserSearch","githubUser","searchForUser","userName","status","Error","onSearch","event","preventDefault","searchValue","target","value","content","name","style","width","followers_url","onSubmit","type","GithubUser","userSearch","username","match","params","prevProps","withRouter","NavBar","to","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAIqBA,E,4MACjBC,MAAQ,CACJC,WAAW,EACXC,UAAW,GACXC,MAAO,I,uDAGX,WAAqB,IAAD,OACTC,EAAgBC,KAAKC,MAArBF,aAEPG,MAAM,GAAD,OAAIH,EAAJ,kBACAI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,EAAKC,SAAS,CACVV,UAAWS,EACXV,WAAW,OAGlBY,OAAM,SAACV,GACJ,EAAKS,SAAS,CACVX,WAAW,EACXE,MAAOA,EAAMW,e,oBAK7B,WACI,MAAsCT,KAAKL,MAApCC,EAAP,EAAOA,UAAWE,EAAlB,EAAkBA,MAAOD,EAAzB,EAAyBA,UAEzB,OACI,sBAAKa,UAAU,iBAAf,UACI,2CACCd,GAAa,2CACbE,GAAS,4BAAIA,IAEbD,EAAUc,KAAI,SAACC,EAAUC,GACtB,OACI,sBAAKH,UAAU,WAAf,UACI,6BAAKE,EAASE,QACd,qBACIC,IAAKH,EAASI,WACdC,IAAG,UAAKL,EAASE,MAAd,iBAJoBD,a,GArCZK,aC+E5BC,E,4MA/EXxB,MAAQ,CACJC,WAAW,EACXwB,WAAY,KACZtB,MAAO,I,EAGXuB,cAAgB,SAACC,GACb,EAAKf,SAAS,CACVX,WAAW,EACXwB,WAAY,KACZtB,MAAO,KAGXI,MAAM,gCAAD,OAAiCoB,IACjCnB,MAAK,SAAAC,GACF,GAAwB,MAApBA,EAASmB,OACT,MAAMC,MAAM,kBAGhB,GAAwB,MAApBpB,EAASmB,OACT,MAAMC,MAAM,qBAGhB,OAAOpB,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKC,SAAS,CACVX,WAAW,EACXwB,WAAYd,OAGnBE,OAAM,SAACV,GACJ,EAAKS,SAAS,CACVX,WAAW,EACXE,MAAOA,EAAMW,c,EAK7BgB,SAAW,SAACC,GACRA,EAAMC,iBACN,IAAMC,EAAcF,EAAMG,OAAO,GAAGC,MACpC,EAAKT,cAAcO,I,4CAGvB,WACI,IACIG,EADJ,EAAuC/B,KAAKL,MAArCC,EAAP,EAAOA,UAAWE,EAAlB,EAAkBA,MAAOsB,EAAzB,EAAyBA,WAiBzB,OAdIA,IACAW,EACI,gCACI,6BAAKX,EAAWY,OAChB,qBACIC,MAAO,CAAEC,MAAO,SAChBnB,IAAKK,EAAWJ,WAChBC,IAAG,UAAKG,EAAWY,KAAhB,eAEP,cAAC,EAAD,CAAejC,aAAcqB,EAAWe,oBAMhD,gCACI,6CACA,uBAAMC,SAAUpC,KAAKyB,SAArB,UACI,uBAAOY,KAAK,SACZ,wBAAQA,KAAK,SAAb,uBAGHzC,GAAa,2CACbE,GAAS,4BAAIA,IACbiC,S,GA1Ecb,a,OCAzBoB,E,4MACF3C,MAAQ,CACJC,WAAW,EACXwB,WAAY,KACZtB,OAAO,G,EAgBXyC,WAAa,WACT,IAAMC,EAAW,EAAKvC,MAAMwC,MAAMC,OAAOF,SAEzCtC,MAAM,gCAAD,OAAiCsC,IACjCrC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,EAAKC,SAAS,CACVX,WAAW,EACXwB,WAAYd,OAGnBE,OAAM,WACH,EAAKD,SAAS,CACVX,WAAW,EACXE,OAAO,Q,uDA3BvB,WACIE,KAAKuC,e,gCAGT,SAAmBI,GACKA,EAAUF,MAAMC,OAAOF,WAClBxC,KAAKC,MAAMwC,MAAMC,OAAOF,UAG7CxC,KAAKuC,e,oBAuBb,WACI,IACIR,EADJ,EAAuC/B,KAAKL,MAArCC,EAAP,EAAOA,UAAWE,EAAlB,EAAkBA,MAAOsB,EAAzB,EAAyBA,WAgBzB,OAbIA,IACAW,EACI,gCACI,6BAAKX,EAAWY,OAChB,qBACIC,MAAO,CAAEC,MAAO,SAChBnB,IAAKK,EAAWJ,WAChBC,IAAG,UAAKG,EAAWY,KAAhB,mBAOf,gCACI,6CACCpC,GAAa,2CACbE,GAAS,oEACTiC,S,GA7DQb,aAmEV0B,cAAWN,G,QCjE1B,SAASO,IACP,OACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,iBAAT,6BAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,2BAAT,8BAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,yBAAT,iCA6BOC,MAvBf,WACE,OACE,qBAAKrC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAACmC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,IAAlB,SACE,wCAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,iBAAiBC,UAAW/B,IAC9C,cAAC,IAAD,CAAO8B,KAAK,0BAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,gDC3BGE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlD,MAAK,YAAkD,IAA/CmD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fef4a4d8.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport './FollowersList.css';\r\n\r\nexport default class FollowersList extends Component {\r\n    state = {\r\n        isLoading: true,\r\n        followers: [],\r\n        error: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {followersUrl} = this.props;\r\n\r\n        fetch(`${followersUrl}?per_page=100`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    followers: data,\r\n                    isLoading: false\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    error: error.message\r\n                })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {isLoading, error, followers} = this.state;\r\n        \r\n        return (\r\n            <div className=\"followers-list\">\r\n                <h2>Followers</h2>\r\n                {isLoading && <p>Loading...</p>}\r\n                {error && <p>{error}</p>}\r\n\r\n                {followers.map((follower, idx) => {\r\n                    return (\r\n                        <div className=\"follower\" key={idx}>\r\n                            <h3>{follower.login}</h3>\r\n                            <img\r\n                                src={follower.avatar_url}\r\n                                alt={`${follower.login}'s avatar`}\r\n                            />\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport FollowersList from './FollowersList';\r\n\r\nclass GithubUserSearch extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        githubUser: null,\r\n        error: ''\r\n    }\r\n\r\n    searchForUser = (userName) => {\r\n        this.setState({\r\n            isLoading: true,\r\n            githubUser: null,\r\n            error: ''\r\n        });\r\n\r\n        fetch(`https://api.github.com/users/${userName}`)\r\n            .then(response => {\r\n                if (response.status === 404) {\r\n                    throw Error('User not found');\r\n                }\r\n\r\n                if (response.status !== 200) {\r\n                    throw Error('An error occurred');\r\n                }\r\n                \r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    githubUser: data\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    error: error.message\r\n                });\r\n            });\r\n    }\r\n\r\n    onSearch = (event) => {\r\n        event.preventDefault();\r\n        const searchValue = event.target[0].value;\r\n        this.searchForUser(searchValue);\r\n    }\r\n\r\n    render() {\r\n        const {isLoading, error, githubUser} = this.state;\r\n        let content;\r\n\r\n        if (githubUser) {\r\n            content = (\r\n                <div>\r\n                    <h2>{githubUser.name}</h2>\r\n                    <img\r\n                        style={{ width: '100px' }}\r\n                        src={githubUser.avatar_url}\r\n                        alt={`${githubUser.name}'s avatar`}\r\n                    />\r\n                    <FollowersList followersUrl={githubUser.followers_url} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Github User</h1>\r\n                <form onSubmit={this.onSearch}>\r\n                    <input type=\"text\" />\r\n                    <button type=\"submit\">Search</button>\r\n                </form>\r\n\r\n                {isLoading && <p>Loading...</p>}\r\n                {error && <p>{error}</p>}\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GithubUserSearch;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass GithubUser extends Component {\r\n    state = {\r\n        isLoading: true,\r\n        githubUser: null,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.userSearch();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const oldUsername = prevProps.match.params.username;\r\n        const incomingUsername = this.props.match.params.username;\r\n\r\n        if (oldUsername !== incomingUsername) {\r\n            this.userSearch();\r\n        }\r\n    }\r\n\r\n    userSearch = () => {\r\n        const username = this.props.match.params.username;\r\n\r\n        fetch(`https://api.github.com/users/${username}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    githubUser: data\r\n                });\r\n            })\r\n            .catch(() => {\r\n                this.setState({\r\n                    isLoading: false,\r\n                    error: true\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {isLoading, error, githubUser} = this.state;\r\n        let content;\r\n\r\n        if (githubUser) {\r\n            content = (\r\n                <div>\r\n                    <h2>{githubUser.name}</h2>\r\n                    <img\r\n                        style={{ width: '100px' }}\r\n                        src={githubUser.avatar_url}\r\n                        alt={`${githubUser.name}'s avatar`}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Github User</h1>\r\n                {isLoading && <p>Loading...</p>}\r\n                {error && <p>Error. Please refresh and try again</p>}\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(GithubUser);","import './App.css';\r\nimport GithubUserSearch from './GithubUserSearch';\r\nimport GithubUser from './GithubUser';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/\">Home</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/github/search\">Github Search</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/github/users/bhague1281\">Brian's Github</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/github/users/kbnewlon\">Kayla's Github</Link>\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <NavBar />\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <h1>Home</h1>\r\n          </Route>\r\n          <Route exact path=\"/github/search\" component={GithubUserSearch} />\r\n          <Route path=\"/github/users/:username\">\r\n            <GithubUser />\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <h1>404</h1>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}